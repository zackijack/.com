version: 2
jobs:
  build:
    docker:
      - image: circleci/node:10.13.0-stretch
    working_directory: ~/code
    steps:
      - checkout
      - restore_cache:
          name: Restore Yarn Cache
          keys:
            - yarn-v1-{{ arc }}-{{ .Branch }}-{{ checksum "yarn.lock" }}
            - yarn-v1-{{ arc }}-{{ .Branch }}-
            - yarn-v1-{{ arc }}-
      - restore_cache:
          name: Restore node_modules Cache
          keys:
            - node-v1-{{ arc }}-{{ .Branch }}-{{ checksum "yarn.lock" }}
            - node-v1-{{ arc }}-{{ .Branch }}-
            - node-v1-{{ arc }}-
      - run:
          name: Install Dependencies
          command: yarn install
      - save_cache:
          name: Save Yarn Cache
          key: yarn-v1-{{ arc }}-{{ .Branch }}-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn
      - save_cache:
          name: Save node_modules Cache
          key: node-v1-{{ arc }}-{{ .Branch }}-{{ checksum "yarn.lock" }}
          paths:
            - node_modules
      - run:
          name: Build
          command: yarn build
      - persist_to_workspace:
          root: .
          paths: 
            - dist/**

  deploy:
    docker:
      - image: circleci/python:3.7.1-stretch
    working_directory: ~/code
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Install AWS CLI
          command: sudo pip install awscli
      - run:
          name: Deploy to AWS S3
          command: aws s3 sync --acl public-read --cache-control max-age=86400 --delete dist/ s3://$AWS_S3_BUCKET_NAME
      - run:
          name: Create Invalidation in AWS CloudFront
          command: aws cloudfront create-invalidation --distribution-id $AWS_CLOUDFRONT_DISTRIBUTION_ID --paths '/*'

workflows:
  version: 2
  build-deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: master